{% assign variant = product.selected_or_first_available_variant %}

{% if variant.metafields.global.customize_buynow.value %}
  {% assign customize_buynow = variant.metafields.global.customize_buynow.value %}
{% else %}
  {% assign customize_buynow = variant.metafields.global.customize_buynow %}
{% endif %}

{% if product.metafields.global.fundedby.value %}
  {% assign fundedby = product.metafields.global.fundedby.value %}
{% else %}
  {% assign fundedby = product.metafields.global.fundedby %}
{% endif %}

{% if variant.metafields['global']['customize_buynow'].value %}
  {% assign customize_buynow = variant.metafields['global']['customize_buynow'].value %}
{% else %}
  {% assign customize_buynow = variant.metafields['global']['customize_buynow'] %}
{% endif %}

{% if variant.metafields['global']['customize_buynow_addnum'].value %}
  {% assign customize_buynow_addnum = variant.metafields['global']['customize_buynow_addnum'].value %}
{% else %}
  {% assign customize_buynow_addnum = variant.metafields['global']['customize_buynow_addnum'] %}
{% endif %}

{% if variant.metafields.global.customize_buynow_addnum.value %}
  {% assign customize_buynow_addnum = variant.metafields.global.customize_buynow_addnum.value %}
{% else %}
  {% assign customize_buynow_addnum = variant.metafields.global.customize_buynow_addnum %}
{% endif %}

{% if variant.metafields['global']['customize_num_buynow'].value %}
  {% assign customize_num_buynow = variant.metafields['global']['customize_num_buynow'].value %}
{% else %}
  {% assign customize_num_buynow = variant.metafields['global']['customize_num_buynow'] %}
{% endif %}

{% if variant.metafields.global.customize_num_buynow.value %}
  {% assign customize_num_buynow = variant.metafields.global.customize_num_buynow.value %}
{% else %}
  {% assign customize_num_buynow = variant.metafields.global.customize_num_buynow %}
{% endif %}

{% if variant.metafields['global']['customize_double_buynow'].value %}
  {% assign customize_double_buynow = variant.metafields['global']['customize_double_buynow'].value %}
{% else %}
  {% assign customize_double_buynow = variant.metafields['global']['customize_double_buynow'] %}
{% endif %}

{% if variant.metafields.global.customize_double_buynow.value %}
  {% assign customize_double_buynow = variant.metafields.global.customize_double_buynow.value %}
{% else %}
  {% assign customize_double_buynow = variant.metafields.global.customize_double_buynow %}
{% endif %}

{% if product.metafields['global']['customize_button'].value %}
  {% assign customize_button = product.metafields['global']['customize_button'].value %}
{% endif %}

{% if variant.metafields['global']['customize_button'].value %}
  {% assign customize_button = variant.metafields['global']['customize_button'].value %}
{% endif %}

{% if variant.metafields['global']['customize_three_buynow'].value %}
  {% assign customize_three_buynow = variant.metafields['global']['customize_three_buynow'].value %}
{% else %}
  {% assign customize_three_buynow = variant.metafields['global']['customize_three_buynow'] %}
{% endif %}

{% if variant.metafields.global.customize_three_buynow.value %}
  {% assign customize_three_buynow = variant.metafields.global.customize_three_buynow.value %}
{% else %}
  {% assign customize_three_buynow = variant.metafields.global.customize_three_buynow %}
{% endif %}

{% if product.metafields.global.hide_shop.value %}
  {% assign hide_shop = product.metafields.global.hide_shop.value %}
{% else %}
  {% assign hide_shop = product.metafields.global.hide_shop %}
{% endif %}

{% if shop.metafields['global']['storefront_key'].value %}
  {% assign storefront_key = shop.metafields['global']['storefront_key'].value %}
{% else %}
  {% assign storefront_key = shop.metafields['global']['storefront_key'] %}
{% endif %}

{% if product.metafields.global.limitOffer.value %}
  {% assign limitOffer = product.metafields.global.limitOffer.value %}
{% else %}
  {% assign limitOffer = product.metafields.global.limitOffer %}
{% endif %}

{% if show_payment_button == true %}
  {% assign show_payment_button = true %}
{% else %}
  {% assign show_payment_button = false %}
{% endif %}

{% assign productData = product.metafields.product.data.value %}

<style>
  .limitOffer {
    color: #000;
    width: 100%;
    overflow: hidden;
    padding-bottom: 16px;
    margin-top: 20px;
  }
  .limitOffer ::-webkit-scrollbar {
    display: none;
  }
  .limitOffer .txt {
    line-height: 1;
    font-size: 16px;
    font-weight: 700;
    margin-bottom: 12px;
  }
  .limitOffer .flexBox {
    display: flex;
    flex-wrap: wrap;
    overflow-x: scroll;
  }
  .limitOffer .flexBox .flexItem {
    width: calc(50% - 4px);
    margin: 0 8px 8px 0;
    background: #ebebeb;
    padding: 18px 12px 18px 19px;
    border-radius: 4px;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }
  .limitOffer .flexBox .flexItem img {
    width: 25%;
  }
  .limitOffer .flexBox .flexItem .desc {
    margin-left: 5%;
    width: 70%;
  }
  @media (min-width: 768px) and (max-width: 1440px) {
    .limitOffer .flexBox .flexItem .desc.EUR {
      font-size: 12px;
    }
  }
  .limitOffer .flexBox .flexItem .content {
    font-size: 12px;
    width: 100%;
    margin-top: 9px;
  }
  .limitOffer .flexBox .flexItem:nth-child(2n) {
    margin-right: 0;
  }
  .limitOffer .flexBox .flexItem:last-child {
    margin-right: 0;
  }
  @media (max-width: 768px) {
    .limitOffer {
      padding-bottom: 24px;
    }
    .limitOffer .txt {
      margin-bottom: 10px;
    }
    .limitOffer .flexBox {
      flex-wrap: nowrap;
    }
    .limitOffer .flexBox .flexItem {
      width: 52.7vw;
      margin: 0 10px 0 0;
      padding: 19px 18px;
      flex-shrink: 0;
      display: unset;
    }
    .limitOffer .flexBox .flexItem .imgBox {
      height: 50px;
    }
    .limitOffer .flexBox .flexItem .desc {
      margin: 10px 0 11px;
      font-size: 14px;
      width: 100%;
    }
    .limitOffer .flexBox .flexItem .content {
      font-size: 12px;
      margin-top: 0;
    }
    .limitOffer .flexBox .flexItem:nth-child(2n) {
      margin-right: 10px;
    }
    .limitOffer .flexBox .flexItem:last-child {
      margin-right: 0;
    }
  }
</style>
{%- if limitOffer != blank -%}
  <div class="limitOffer borderB line_background" id="limitOffer">
    <p class="txt">{{ limitOffer.title }}</p>
    {% if limitOffer.data != blank %}
      <div class="flexBox">
        {% for item in limitOffer.data %}
          <div class="flexItem">
            <img class="lazyload" data-src="{{ item.icon }}" alt="">
            <p class="desc {{ shop.currency }}">{{ item.title }}</p>
            <p class="content">{{ item.content }}</p>
          </div>
        {% endfor %}
      </div>
    {% endif %}
  </div>
{%- endif -%}

<div class="clearfix product_form init smart-payment-button--{{ show_payment_button }} {% if product.variants.size > 1 or product.options.size > 1 %}product_form_options{% endif %} product_form--{{ settings.product_form_style }}"
      id="product-form-{{ product.id }}"
      data-product-form
      data-money-format="{{ shop.money_format | strip_html }}"
      data-shop-currency="{{ shop.currency }}"
      data-select-id="product-select-{{ product.id }}{{ product-form }}{{ object.id }}{{ block.id }}"
      data-enable-state="{% if template contains 'product' %}true{% else %}false{% endif %}"
      data-product="{{ product | json | escape }}"
      {% if settings.limit_quantity or settings.display_inventory_left %}
        data-variant-inventory='[{%- for v in product.variants -%}{"id":{{v.id}},"inventory_quantity":{{v.inventory_quantity}},"inventory_management":"{{v.inventory_management}}","inventory_policy":"{{v.inventory_policy}}"}{% if forloop.last == false %},{% endif %}{%- endfor -%}]'
      {% endif %}
      data-product-id="{{ product.id }}"
      >
  {% form 'product', product %}

  {% if product.variants.size > 1 %}
    {% if product.options.size > 1 %}
      <div class="select-container">
          {% if context == 'quickshop' %}
            <div class="select">
          {% endif %}
          <select id="product-select-{{ product.id }}{{ product-form }}{{ object.id }}{{ block.id }}" name="id" class="multi_select" data-variant-selector>
            {% for v in product.variants %}
              <option {% if v == variant %}selected="selected"{% endif %} value="{{ v.id }}" data-image-id="{{ v.featured_media.id }}" data-sku="{{ v.sku }}">{{ v.title }}</option>
            {% endfor %}
          </select>
          {% if context == 'quickshop' %}
            </div>
          {% endif %}
      </div>
    {% elsif product.options.size == 1 and product.variants.size > 1 or product.options.size == 1 and product.options[0] != "Title" %}
      <div class="select-container">
        <label class="label">{{ product.options[0] }}</label>
        <div>
          {% if context == 'quickshop' %}
            <div class="select">
          {% endif %}
          <select id="product-select-{{ product.id }}{{ product-form }}{{ object.id }}{{ block.id }}" name="id" data-variant-selector>
            {% for v in product.variants %}
              <option {% if v == variant %}selected="selected"{% endif %} value="{{ v.id }}" data-image-id="{{ v.featured_media.id }}" data-sku="{{ v.sku }}">{{ v.title }}</option>
            {% endfor %}
          </select>
          {% if context == 'quickshop' %}
            </div>
          {% endif %}
        </div>
      </div>
    {% endif %}
  {% else %}
    <input type="hidden" name="id" value="{{ variant.id }}" />
  {% endif %}

  {% if product.variants.size > 1 %}
    {% if settings.product_form_style == "swatches" and product.variants.size > 1 or settings.product_form_style == "swatches" and product.options[0] != "Title" %}
      <div class="swatch_options collection_swatches">
        {% for option in product.options %}
          {% render 'product__swatch',
                  product: product,
                  option: option
          %}
        {% endfor %}
      </div>
    {% endif %}
  {% endif %}

  {% if product.available %}
    {% if settings.display_inventory_left %}
      <p class="items_left">
        {% if variant.inventory_management != blank and variant.inventory_quantity > 0 %}
          {% capture items_left_text %}
            {% if variant.inventory_quantity == 1 %}
              {{ 'products.product.items_left_count.one' | t }}
            {% else %}
              {{ 'products.product.items_left_count.other' | t }}
            {% endif %}
          {% endcapture %}
          {% if variant.inventory_quantity <= settings.inventory_threshold %}
            {{ variant.inventory_quantity }} {{ items_left_text }}
          {% endif %}
        {% endif %}
      </p>
    {% endif %}
    <div class="purchase-details {% if variant.price == 999999999 %}swap--visible{% endif %} {% if settings.display_product_quantity %}has-quantity-box{% endif %}">
      {% if settings.display_product_quantity and customize_buynow == blank %}
        <div class="purchase-details__quantity product-quantity-box quantity-box--{{ settings.qty_box_style }}">
          {% render 'quantity-box' %}
        </div>
      {% endif %}
      {% comment %} Error message for add to cart action {% endcomment %}
      <div class="cart-warning"></div>
      {% if fundedby %}
        <div>
          <p class="line-item-property__field">
            <input id="funded-by" type="text" name="properties[Funded by]" placeholder="Funded by">
          </p>
        </div>
      {% endif %}
      <!-- <p class="line-item-property__field">
        <label for="code">code</label>
        <input id="code" type="text" name="properties[code]">
      </p> -->
      <div class="purchase-details__buttons purchase-details__spb--{{ show_payment_button }}">
        {% if settings.cart_action == 'reload_page' %}
          <input type="hidden" name="return_to" value="back" />
        {% elsif settings.cart_action == 'redirect_cart' %}
          <input type="hidden" name="return_to" value="{{ routes.cart_url }}" />
        {% endif %}

        {% capture add_to_cart_label %}{% if collection_handles contains 'pre-order' %}{{ 'collections.general.pre_order' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endif %}{% endcapture %}

        {% if customize_buynow %}
          {% render 'customize_buynow',
              buynow_txt: customize_buynow,
              variant_id: variant.id,
              variant_quantity: 1
          %}
        {% elsif customize_buynow_addnum %}
          {% render 'customize_buynow_addnum',
              buynow_txt: customize_buynow_addnum.buynow_txt,
              variant_id: variant.id,
              variant_quantity: $(".purchase-details input").val()
          %}
        {% elsif customize_num_buynow  %}
          {% render 'customize_num_buynow',
              buynow_txt: customize_num_buynow
          %}
        {% elsif customize_double_buynow  %}
          {% render 'customize_double_buynow',
              buynow_txt: customize_double_buynow.buynow_txt,
              buynow_txt_2: customize_double_buynow.buynow_txt_2
          %}
          {% if show_payment_button %}
            {% comment %}{{ form | payment_button }}{% endcomment %}
            <button type="button" class="button action_button button--primary button-payment-button" style="flex:1; max-width: 48%;" data-js-buynow >{{ shop.metafields.global.common.value.buy_now }}</button>
          {% endif %}
        {% elsif customize_button  %}
          {% render 'customize_button',
            buynow_txt: customize_button.buynow_txt,
            addtocat_txt: customize_button.addtocat_txt
          %}
        {% elsif customize_three_buynow  %}
        {% capture add_to_cart_label %}{% if collection_handles contains 'pre-order' %}{{ 'collections.general.pre_order' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endif %}{% endcapture %}
          {% render 'customize_three_buynow',
            buynow_txt: customize_three_buynow.buynow_txt,
            addtocat_txt: customize_three_buynow.addtocat_txt,
            buynow_txt2:customize_three_buynow.buynow_txt2,
          %}
        {% elsif hide_shop == blank %}
        {% if productData.payment.add2cart == 'tryNow' %}
          <div style="width: 50%;">
            <input type="hidden" name="properties[tn_enabled]" value="" id="trynow-property">
            <button type="button" id="tn-pdp-btn" onclick="handleTryNowBtn('product-form-{{ product.id }}')" class="shopify-payment-button__button shopify-payment-button__button--unbranded" style="max-width: calc(100% - 12px);width: 100%;border-radius: 30px;cursor: pointer;"><span>{{ productData.payment.tryNow.btnText | default: "Try Now" }}</span></button>
          </div>
        {% else %}
          <button type="{% if settings.cart_action == 'mini_cart' or settings.cart_action == 'drawer' %}button{% else %}submit{% endif %}" name="add" class="button {% if settings.cart_action == 'mini_cart' or settings.cart_action == 'drawer' %} ajax-submit {% endif %}action_button button--add-to-cart {% if show_payment_button %} action_button--secondary {% endif %}" data-label={{ add_to_cart_label | json }} data-add-to-cart-trigger>
            {% if  settings.button_cart_icon != blank and settings.button_cart_icon_position == 'left' %}
              {% render 'icon',
                      name: settings.button_cart_icon,
                      icon_class: 'icon--cart'
              %}
            {% endif %}
            <span class="text">{{ add_to_cart_label }}</span>
            {% if  settings.button_cart_icon != blank and settings.button_cart_icon_position == 'right' %}
              {% render 'icon',
                      name: settings.button_cart_icon,
                      icon_class: 'icon--cart icon--right'
              %}
            {% endif %}
            <svg x="0px" y="0px" width="32px" height="32px" viewBox="0 0 32 32" class="checkmark">
              <path fill="none" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" d="M9,17l3.9,3.9c0.1,0.1,0.2,0.1,0.3,0L23,11"/>
            </svg>
          </button>
        {% endif %}
          
          {% if show_payment_button %}
            {% comment %}{{ form | payment_button }}{% endcomment %}
            <button type="button" class="button action_button button--primary button-payment-button" style="flex:1; max-width: 48%;" data-js-buynow >{{ shop.metafields.global.common.value.buy_now }}</button>
          {% endif %}
          
        {% endif %}

        {% render 'amzn-buy', product: product %}
      </div>
    </div>
  {% endif %}
{% endform %}
</div>

<script>
  const toggleTrynowProperty = (value) => {
    const tryNowProperty = document.querySelector("#trynow-property"); 
    tryNowProperty && tryNowProperty.setAttribute("value", value); 
  }

  const handleTryNowBtn = (formId) => { 
    toggleTrynowProperty('true')

    const line_items = [{
      variant_id: +'{{ variant.id }}',
      quantity: Number($(".purchase-details input").val()),
      properties:  { tn_enabled: "true" }
    }];

    const cookieDiscount = $('#purchase').data('cookies-discount') ?  Cookies.get('discount_code') : ''
    const discount = cookieDiscount || Shopify.theme.getURLParams('discount') || $('#couponCode').text() || ''

    Shopify.theme.bundleBuynow({
      authorization: "{{ storefront_key }}",
      checkout: {
        line_items,
        presentment_currency: "{{ shop.currency }}",
        is_upstream_button: true,
        page_type: "product",
        secret: true,
        discount,
        wallet_name: "Checkout"
      },
      onSuccess: () => {},
      onError: err => $.dialog({ title: err.message, content: err.description, type: 'red' })
    });

    // ga3
    window.dataLayer.push({
      'event': 'eeEvent',
      'eventCategory': 'EnhancedEcommerce',
      'eventAction': 'BuyNow_try_first', 
      'eventLabel': '{{ variant.sku }}',
      'ecommerce': {
        'currencyCode': '{{ shop.currency }}',
        'add': {
          'products': [{
            'name':'{{ variant.name }}',
            'id': '{{ variant.sku }}',
            'category': '',
            'categoryName': '{{ product.type }}',
            'brand': '{{ shop.name }}',
            'variant': '{{ variant.title }}',
            'price': +'{{ variant.price | divided_by: 100 }}',
            'quantity': Number($(".purchase-details input").val())
          }]
        }
      }
    })

    //ga4
    window.dataLayer.push({ "event_parameters": null });
    window.dataLayer.push({
      "event": "ga4Event",
      "event_name": "begin_checkout",
      "event_parameters": {
        "page_group": "Product Detail Page_" + '{{ variant.sku }}',
        "position": "Product Detail Page_Checkout_try_first",
        "currency": '{{ shop.currency }}',
        "value": +'{{ variant.price | divided_by: 100 }}',
        "items": [{
          "item_id": '{{ variant.sku }}',
          "item_name":  '{{ variant.name }}',
          "item_brand": '{{ shop.name }}',
          "item_category": '',
          "item_variant": '{{ variant.title }}',
          "price": +'{{ variant.price | divided_by: 100 }}',
          "quantity": Number($(".purchase-details input").val())
        }]
      }
    });
  };
  
  $(document).ready(function(){
    const variant = JSON.parse('{{ variant | json }}')
    const product_title = '{{ product.title }}'
    let variant_id = variant.id

    // 按钮AB测试
    $('.button--add-to-cart').addClass('brandButtonText');

    $('.product-form-container .swatch_options .swatch-element').on('click', function() {
      variant_id = $(this).data('v-id')
      variant.sku = $(this).data('sku')
      variant.name = `${product_title} - ${$(this).data('value')}`
    })

    $('[data-js-buynow]').on('click', function(e) {
      e.preventDefault();

      const line_items = [{
        variant_id,
        quantity: Number($(".purchase-details input").val())
      }];

      const discount = $('#couponCode').text() || ''

      Shopify.theme.bundleBuynow({
        authorization: "{{ storefront_key }}",
        checkout: {
          line_items,
          presentment_currency: "{{ shop.currency }}",
          is_upstream_button: true,
          page_type: "product",
          secret: true,
          discount,
          wallet_name: "Checkout"
        },
        onSuccess: () => {},
        onError: err => $.dialog({ title: err.message, content: err.description, type: 'red' })
      });

      // ga4
      window.dataLayer.push({
        'event': 'eeEvent',
        'eventCategory': 'EnhancedEcommerce',
        'eventAction': 'BuyNow', 
        'eventLabel': variant.sku,
        'ecommerce': {
          'currencyCode': '{{ shop.currency }}', // 填写对应货币 USD EUR...
          'add': {
            'products': [{
              'name': variant.name,
              'id': variant.sku,
              'category': '',
              'categoryName': '{{ product.type }}',
              'brand': '{{ shop.name }}',
              'variant': variant.title,
              'price': +'{{ variant.price | divided_by: 100 }}',
              'quantity': Number($(".purchase-details input").val())
            }]
          }
        }
      })
    })
  });
</script>


